.. include:: /include.rst

Report 003391 // GHW - Sandbox - ADMINREPORT
============================================

Report information: 3391
------------------------

ID number: 3391

Name: GHW - Sandbox - ADMINREPORT

Created on: 2020-12-28 15:17:04

Modified on: 2020-12-28 16:03:21

Cache expiry in seconds: 300

Created by: gwilliams

This file generated: 2023-03-22 15:19:48

Notes:

.. raw:: html

  <div style="border: 1px solid black; padding: 25px;">

    

  </div>


SQL: 3391
---------

.. code-block:: sql
  :linenos:

    SELECT
      branchescategories.branchname,
      If(
        branchescategories.category_type = 'A', 
        'Adult', 
        If(
          branchescategories.category_type = 'C', 
          'Minor', 
          If(
            branchescategories.category_type = 'S', 
            'Staff', 
            If(
              branchescategories.category_type = 'I', 
              'Organization', 
              If(
                branchescategories.category_type = 'P', 
                'Professional', 
                If(
                  branchescategories.category_type = 'X', 
                  'Statistical', 
                  branchescategories.category_type
                )
              )
            )
          )
        )
      ) AS CATEGORY_TYPE,
      If(
        Concat(branchescategories.dateofbirthrequired, branchescategories.upperagelimit) = 0999, 
        "Any age", 
        If(
          Concat(branchescategories.dateofbirthrequired, branchescategories.upperagelimit) LIKE "1_999", 
          Concat(branchescategories.dateofbirthrequired, " or older"), 
          Concat_Ws(" - ", branchescategories.dateofbirthrequired, branchescategories.upperagelimit)
        )
      ) AS AGE_RANGE,
      branchescategories.description AS DESCRIPTION,
      branchescategories.categorycode,
      If(categories_branches.branchcode IS NULL, 'No', 'Yes') AS STAFF_CAN_CREATE_NEW,
      TOTAL.Count_borrowernumber AS TOTAL_BORROWERS,
      LM_ADDED.Count_borrowernumber AS ADDED_LM,
      LM_RENEWED.Count_borrowernumber AS RENEWED_LM,
      LM_DELETED.Count_borrowernumber AS DELETED_LM,
      Concat(
        '<a href=\"/cgi-bin/koha/reports/guided_reports.pl?reports=3078&phase=Run+this+report&param_name=Choose+your+library|ZBRAN&sql_params=', 
        branchescategories.branchcode, 
        '&param_name=Choose+the+patron+category|LBORROWERCAT&sql_params=',
        branchescategories.categorycode,
        '\" target="_blank">Report 3078</a>'
      ) AS LINK
    FROM
      (SELECT
          branches.branchcode,
          branches.branchname,
          categories.categorycode,
          categories.description,
          categories.category_type,
          categories.dateofbirthrequired,
          categories.upperagelimit
        FROM
          branches,
          categories) branchescategories LEFT JOIN
      categories_branches ON categories_branches.branchcode =
          branchescategories.branchcode AND
          categories_branches.categorycode = branchescategories.categorycode
      LEFT JOIN
      (SELECT
          Count(borrowers.borrowernumber) AS Count_borrowernumber,
          borrowers.branchcode,
          borrowers.categorycode
        FROM
          borrowers
        GROUP BY
          borrowers.branchcode,
          borrowers.categorycode) TOTAL ON
          TOTAL.branchcode = branchescategories.branchcode AND
          TOTAL.categorycode = branchescategories.categorycode LEFT JOIN
      (SELECT
          Count(borrowers.borrowernumber) AS Count_borrowernumber,
          borrowers.branchcode,
          borrowers.categorycode
        FROM
          borrowers
        WHERE
          Year(borrowers.dateenrolled) = Year(Now() - INTERVAL 1 MONTH) AND
          Month(borrowers.dateenrolled) = Month(Now() - INTERVAL 1 MONTH)
        GROUP BY
          borrowers.branchcode,
          borrowers.categorycode) LM_ADDED ON LM_ADDED.branchcode =
          branchescategories.branchcode AND
          LM_ADDED.categorycode = branchescategories.categorycode LEFT JOIN
      (SELECT
          deletedborrowers.branchcode,
          deletedborrowers.categorycode,
          Count(deletedborrowers.borrowernumber) AS Count_borrowernumber
        FROM
          deletedborrowers
        WHERE
          Year(deletedborrowers.updated_on) = Year(Now() - INTERVAL 1 MONTH) AND
          Month(deletedborrowers.updated_on) = Month(Now() - INTERVAL 1 MONTH)
        GROUP BY
          deletedborrowers.branchcode,
          deletedborrowers.categorycode) LM_DELETED ON LM_DELETED.branchcode =
          branchescategories.branchcode AND
          LM_DELETED.categorycode = branchescategories.categorycode LEFT JOIN
      (SELECT
          Count(borrowers.borrowernumber) AS Count_borrowernumber,
          borrowers.branchcode,
          borrowers.categorycode
        FROM
          borrowers
        WHERE
          Year(borrowers.date_renewed) = Year(Now() - INTERVAL 1 MONTH) AND
          Month(borrowers.date_renewed) = Month(Now() - INTERVAL 1 MONTH)
        GROUP BY
          borrowers.branchcode,
          borrowers.categorycode) LM_RENEWED ON LM_RENEWED.branchcode =
          branchescategories.branchcode AND
          LM_RENEWED.categorycode = branchescategories.categorycode
    WHERE
      (branchescategories.branchcode LIKE @brn := <<Choose your library|LBRANCH>> COLLATE utf8mb4_unicode_ci) AND
      If(categories_branches.branchcode IS NULL, 'No', 'Yes') LIKE <<Staff can make new|ZYES_NO>>
    GROUP BY
      branchescategories.branchname,
      branchescategories.categorycode
    UNION
    SELECT
      Concat(branchescategories.branchname, ' - TOTAL') AS branchname,
      Concat('') AS CATEGORY_TYPE,
      Concat('') AS AGE_RANGE,
      Concat('') AS DESCRIPTION,
      Concat('') AS CATEGORYCODE,
      Concat('') AS STAFF_CAN_CREATE_NEW,
      TOTAL.Count_borrowernumber AS TOTAL_BORROWERS,
      LM_ADDED.Count_borrowernumber AS ADDED_LM,
      LM_RENEWED.Count_borrowernumber AS RENEWED_LM,
      LM_DELETED.Count_borrowernumber AS DELETED_LM,
      branchescategories.branchcode
    FROM
      (SELECT
          branches.branchcode,
          branches.branchname
        FROM
          branches) branchescategories LEFT JOIN
      (SELECT
          Count(borrowers.borrowernumber) AS Count_borrowernumber,
          borrowers.branchcode
        FROM
          borrowers
        WHERE
          Year(borrowers.dateenrolled) = Year(Now() - INTERVAL 1 MONTH) AND
          Month(borrowers.dateenrolled) = Month(Now() - INTERVAL 1 MONTH)
        GROUP BY
          borrowers.branchcode) LM_ADDED ON LM_ADDED.branchcode =
          branchescategories.branchcode LEFT JOIN
      (SELECT
          deletedborrowers.branchcode,
          Count(deletedborrowers.borrowernumber) AS Count_borrowernumber
        FROM
          deletedborrowers
        WHERE
          Year(deletedborrowers.updated_on) = Year(Now() - INTERVAL 1 MONTH) AND
          Month(deletedborrowers.updated_on) = Month(Now() - INTERVAL 1 MONTH)
        GROUP BY
          deletedborrowers.branchcode) LM_DELETED ON LM_DELETED.branchcode =
          branchescategories.branchcode LEFT JOIN
      (SELECT
          Count(borrowers.borrowernumber) AS Count_borrowernumber,
          borrowers.branchcode
        FROM
          borrowers
        WHERE
          Year(borrowers.date_renewed) = Year(Now() - INTERVAL 1 MONTH) AND
          Month(borrowers.date_renewed) = Month(Now() - INTERVAL 1 MONTH)
        GROUP BY
          borrowers.branchcode) LM_RENEWED ON LM_RENEWED.branchcode =
          branchescategories.branchcode LEFT JOIN
      (SELECT
          Count(borrowers.borrowernumber) AS Count_borrowernumber,
          borrowers.branchcode
        FROM
          borrowers
        GROUP BY
          borrowers.branchcode) TOTAL ON
          TOTAL.branchcode = branchescategories.branchcode
    WHERE
      branchescategories.branchcode LIKE @brn
    GROUP BY
      Concat(branchescategories.branchname, ' - TOTAL')
    ORDER BY
      branchname,
      Coalesce(DESCRIPTION, 'Z')



    



    



    



    









